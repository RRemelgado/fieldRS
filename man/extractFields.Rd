% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractFields.R
\name{extractFields}
\alias{extractFields}
\title{extractFields}
\usage{
extractFields(x, method = "chull", ...)
}
\arguments{
\item{x}{Object of class \emph{RasterLayer}.}

\item{y}{method. One of "smooth" or "chull"}
}
\value{
A \emph{SpatialPolygonsDataFrame}.
}
\description{
Extracts and vectorizes clumps of pixels with equal value within a raster object.
}
\details{
{Assuming \emph{x} is a classified or segmented image, this function segments it using 
\link{ccLabel} and, draws polygons for each group of connected pixels. The waz polzgons are drawn 
depends on the \emph{method} keyword. The function will accept one of the following options:
\itemize{
  \item{\emph{chull} - Extracts the center pixel coordinates and builds a polygon based on their minimum convex hull.}
  \item{\emph{smooth} - Aggregates pixels to 2x the resolution to fill data gaps, disaggregates them to the original 
  resolution, applies an erosion flter and converts the output to a polygon.}}
Once this process is completed, the function derives a \emph{SpatialPolygonsDataFrame} reporting on:
\itemize{
 \item{\emph{region.id} - Unique polygon identifier corresponding to the original pixel region.}
 \item{\emph{area} - Polygon Area (in square meters).}
 \item{\emph{perimeter} - Polygon perimeter (in meters).}
 \item{\emph{percent.cover} - Ration between the polygon area and the area of the corresponding pixels.}}}
}
\examples{
{

require(raster)

# read raster data
r <- brick(system.file("extdata", "ndvi.tif", package="fieldRS"))

# spatial change labeling
or <- ccLabel(r[[1]], method="spatial", change.threshold=10)$regions

# convert to polygons and plot
ef <- extractFields(or)
plot(ef)

}
}
